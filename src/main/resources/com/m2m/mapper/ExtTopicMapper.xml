<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.m2m.mapper.ExtTopicMapper">
  <resultMap id="BaseResultMap" type="com.m2m.domain.Topic">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 21 11:11:01 CST 2017.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="live_image" jdbcType="VARCHAR" property="liveImage" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="long_time" jdbcType="BIGINT" property="longTime" />
    <result column="qrcode" jdbcType="VARCHAR" property="qrcode" />
    <result column="core_circle" jdbcType="VARCHAR" property="coreCircle" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="ce_audit_type" jdbcType="INTEGER" property="ceAuditType" />
    <result column="ac_audit_type" jdbcType="INTEGER" property="acAuditType" />
    <result column="ac_publish_type" jdbcType="INTEGER" property="acPublishType" />
    <result column="rights" jdbcType="INTEGER" property="rights" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="sub_type" jdbcType="INTEGER" property="subType" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="listing_time" jdbcType="TIMESTAMP" property="listingTime" />
    <result column="out_time" jdbcType="TIMESTAMP" property="outTime" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="auto_join_core" jdbcType="INTEGER" property="autoJoinCore" />
    <result column="only_friend" jdbcType="INTEGER" property="onlyFriend" />
  </resultMap>

	<select id="getNoCoreCircleMembers" resultType="com.m2m.entity.ExtIdCount">
		select f.topic_id as id,COUNT(1) as count from live_favorite f,topic t
		where f.topic_id=t.id
		and not FIND_IN_SET(f.uid, SUBSTR(t.core_circle FROM 2 FOR
		LENGTH(t.core_circle)-2))
		and f.topic_id in
		<if test="idList!=null and idList.size() &gt; 0">
			<foreach close=")" collection="idList" item="ids" open="("
				separator=",">
				#{ids}
			</foreach>
		</if>
		group by f.topic_id
	</select>
	<select id="getCoreCircleMembers" resultType="com.m2m.entity.ExtIdCount">
		select t.id,
		LENGTH(t.core_circle)-LENGTH(REPLACE(t.core_circle,',','')) as
		count
		from topic t where t.id in
		<if test="idList!=null and idList.size() &gt; 0">
			<foreach close=")" collection="idList" item="ids" open="("
				separator=",">
				#{ids}
			</foreach>
		</if>
	</select>

	<select id="getAcTopicListByCeTopicId" resultMap="BaseResultMap">
		select m.* from (select t.*,UNIX_TIMESTAMP(a.update_time)*100000 as ltime
		from topic_aggregation a,topic t where a.sub_topic_id=t.id
		and a.topic_id=#{ceTopicId} and a.is_top=1
		UNION
		select t.*,t.long_time as ltime from topic_aggregation a,topic t
		where a.sub_topic_id=t.id and a.topic_id=#{ceTopicId}
		and a.is_top=0 ) m
		order by m.ltime desc limit #{start},#{pageSize}
	</select>
	<select id="getUserStealLogByDay" resultType="com.m2m.domain.UserStealLog">
		select id,uid,topic_id as topicId,stealed_coins as
		stealedCoins,create_time as createTime,is_big_red_pack as isBigRedPack
		from user_steal_log where uid=#{uid} and
		DATE_FORMAT(create_time,'%Y-%m-%d')=#{day}
	</select>
	<select id="getUserCoinsByDay" resultType="Integer">
		select IF(SUM(coins) is null,0,SUM(coins)) from(
		select SUM(stealed_coins) coins from user_steal_log where uid=#{uid} and (
		is_big_red_pack=0 or is_big_red_pack is null) and
		DATE_FORMAT(create_time,'%Y-%m-%d')=#{day}
		UNION ALL
		select SUM(coin) coins from rule_log where uid=#{uid} and
		DATE_FORMAT(create_time,'%Y-%m-%d')=#{day}
		) c
	</select>

	
  <insert id="saveTopicFragment" parameterType="com.m2m.domain.TopicFragmentWithBLOBs" useGeneratedKeys="true" keyProperty="id">
    insert into topic_fragment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="topicId != null">
        topic_id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="fragmentImage != null">
        fragment_image,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="contentType != null">
        content_type,
      </if>
      <if test="topId != null">
        top_id,
      </if>
      <if test="bottomId != null">
        bottom_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="atUid != null">
        at_uid,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="outType != null">
        out_type,
      </if>
      <if test="fragment != null">
        fragment,
      </if>
      <if test="extra != null">
        extra,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="topicId != null">
        #{topicId,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="fragmentImage != null">
        #{fragmentImage,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="contentType != null">
        #{contentType,jdbcType=INTEGER},
      </if>
      <if test="topId != null">
        #{topId,jdbcType=BIGINT},
      </if>
      <if test="bottomId != null">
        #{bottomId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="atUid != null">
        #{atUid,jdbcType=BIGINT},
      </if>
      <if test="source != null">
        #{source,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outType != null">
        #{outType,jdbcType=INTEGER},
      </if>
      <if test="fragment != null">
        #{fragment,jdbcType=LONGVARCHAR},
      </if>
      <if test="extra != null">
        #{extra,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

	<select id="getTopicCount" resultType="com.m2m.entity.ExtTopicCount">
		select 	f.topic_id as topicId,
				count(1) as totalCount,
				count(if(f.type in (0,3,11,12,13,52,54,55,57), TRUE, NULL)) as updateCount,
				count(if(f.type in (0,3,11,12,13,52,54,55,57), NULL, TRUE)) as reviewCount
		from topic_fragment f
		where f.status=1
		and f.topic_id=#{topicId}
	</select>
	
	<select id="getTopicCountByTids" resultType="com.m2m.entity.ExtTopicCount">
		select 	f.topic_id as topicId,
				count(1) as totalCount,
				count(if(f.type in (0,3,11,12,13,52,54,55,57), TRUE, NULL)) as updateCount,
				count(if(f.type in (0,3,11,12,13,52,54,55,57), NULL, TRUE)) as reviewCount
		from topic_fragment f
		where f.status=1
		and f.topic_id in 
		<foreach close=")" collection="tidList" item="tid" open="(" separator=",">
			#{tid}
		</foreach>
		group by f.topic_id
	</select>
	
	<select id="getTopicFragmentForPage" resultType="com.m2m.domain.TopicFragmentWithBLOBs">
		<if test="sinceId&gt;0">
		select * from (
		</if>
		select 	f.id,
				f.topic_id as topicId,
				f.uid,
				f.fragment_image as fragmentImage,
				f.fragment,
				f.type,
				f.content_type as contentType,
				f.top_id as topId,
				f.bottom_id as bottomId,
				f.create_time as createTime,
				f.at_uid as atUid,
				f.source,
				f.extra,
				f.score,
				f.status,
				f.update_time as updateTime,
				f.out_type as outType
		from topic_fragment f use index (idx_topic_id)
		where f.topic_id=#{topicId}
		order by f.id asc
		limit #{start},#{pageSize}
		<if test="sinceId&gt;0">
		) a where a.id&gt;#{sinceId}
		</if>
	</select>

	<select id="countListingKingdoms" resultType="java.lang.Integer">
		select COUNT(1)
		FROM topic t,topic_listed tl WHERE tl.topic_id =t.id and tl.status
		in(0,1)
	</select>
	
	<select id="getMyLivesByUpdateTimeNew" resultType="com.m2m.entity.ExtTopic">
		select m.*
		from (
			SELECT 	t.id,
					t.uid,
					t.live_image as liveImage,
					t.title,
					t.status,
					t.create_time as createTime,
					t.update_time as updateTime,
					t.long_time as longTime,
					t.qrcode,
					t.core_circle as coreCircle,
					t.type,
					t.ce_audit_type as ceAuditType,
					t.ac_audit_type as acAuditType,
					t.ac_publish_type as acPublishType,
					t.rights,
					t.summary,
					t.sub_type as subType,
					t.price,
					t.listing_time as listingTime,
					t.out_time as outTime,
					t.category_id as categoryId,
					t.auto_join_core as autoJoinCore,
					CASE WHEN t5.is_top=1 THEN 1 ELSE 0 END AS isTop,
					CASE WHEN t5.is_top=1 THEN t3.long_time*100 ELSE t3.long_time END AS longtimes
			FROM ( 
   				SELECT t1.id, t1.long_time
   				FROM topic t1 JOIN live_favorite t2 ON (t1.id = t2.topic_id AND t2.uid = #{uid} )
   				UNION 
   				SELECT t1.id, t1.long_time
   				FROM topic t1
   				WHERE FIND_IN_SET(#{uid}, SUBSTR(t1.core_circle FROM 2 FOR LENGTH(t1.core_circle)-2)) 
			) t3
			LEFT JOIN topic_user_config t5 ON (t3.id = t5.topic_id AND t5.uid = #{uid})
			LEFT JOIN block_topic t6 ON (t6.uid=#{uid} AND t6.topic_id = t3.id)
			JOIN topic t ON (t.id = t3.id)
			WHERE t6.topic_id IS NULL
  		) m
  		where m.longtimes &lt; #{updateTime}
		ORDER BY m.longtimes DESC
    	LIMIT 10
	</select>
	
	<select id="getTopicIdsByUids" resultType="Long">
  		select t.id from topic t where t.uid in
  		<if test="uidList!=null and uidList.size() &gt; 0">
			<foreach close=")" collection="uidList" item="uid" open="("
				separator=",">
				#{uid}
			</foreach>
		</if>
  	</select>
  	
  	<select id="getConvergeTopic" resultType="com.m2m.domain.Topic">
  		SELECT * FROM topic WHERE uid = #{uid} and type = 1000
  	</select>
  	
  	<delete id="delLiveFavoriteFromAllOtherUser">
  		delete from live_favorite
		where topic_id in (
			select t.id
			from topic t
			where t.uid=#{targetUid}
		)
		and uid=#{uid}
  	</delete>
  	
  	<select id="getTargetTopicsInCore" resultMap="BaseResultMap">
  		select t.*
		from topic t
		where t.uid=#{targetUid}
		and FIND_IN_SET(#{uid},SUBSTR(t.core_circle FROM 2 FOR LENGTH(t.core_circle)-2))
  	</select>
  	
  	<update id="updateTopicCore">
  		update topic set core_circle=#{newCore} where id=#{topicId}
  	</update>

  	<insert id="saveTopic" parameterType="com.m2m.domain.Topic" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 11 10:25:54 CST 2018.
    -->
    insert into topic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="liveImage != null">
        live_image,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="longTime != null">
        long_time,
      </if>
      <if test="qrcode != null">
        qrcode,
      </if>
      <if test="coreCircle != null">
        core_circle,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="ceAuditType != null">
        ce_audit_type,
      </if>
      <if test="acAuditType != null">
        ac_audit_type,
      </if>
      <if test="acPublishType != null">
        ac_publish_type,
      </if>
      <if test="rights != null">
        rights,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="subType != null">
        sub_type,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="listingTime != null">
        listing_time,
      </if>
      <if test="outTime != null">
        out_time,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="autoJoinCore != null">
        auto_join_core,
      </if>
      <if test="onlyFriend != null">
        only_friend,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="liveImage != null">
        #{liveImage,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="longTime != null">
        #{longTime,jdbcType=BIGINT},
      </if>
      <if test="qrcode != null">
        #{qrcode,jdbcType=VARCHAR},
      </if>
      <if test="coreCircle != null">
        #{coreCircle,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="ceAuditType != null">
        #{ceAuditType,jdbcType=INTEGER},
      </if>
      <if test="acAuditType != null">
        #{acAuditType,jdbcType=INTEGER},
      </if>
      <if test="acPublishType != null">
        #{acPublishType,jdbcType=INTEGER},
      </if>
      <if test="rights != null">
        #{rights,jdbcType=INTEGER},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="subType != null">
        #{subType,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="listingTime != null">
        #{listingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outTime != null">
        #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="autoJoinCore != null">
        #{autoJoinCore,jdbcType=INTEGER},
      </if>
      <if test="onlyFriend != null">
        #{onlyFriend,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <select id="getAggregationImage" parameterType="java.util.List" resultType="com.m2m.response.GetLiveByCidResponse$AcImageElement">
   select 
   ti.image as imageUrl,
   ti.type,
   ti.extra 
   from 
   topic_image ti,
   topic_aggregation ta  
   where 
   ti.topic_id = ta.sub_topic_id 
   and ta.topic_id=#{topicId}
   order by ti.create_time desc,ti.fid desc 
   limit 10
  </select>
  
	<select id="countUserKingdomSubscribeCount" resultType="java.lang.Integer">
		select count(DISTINCT f.uid)
		from live_favorite f,topic t
		where f.topic_id=t.id
		and t.uid=#{uid}
	</select>
	
	<select id="getTopTopicImageByUid" resultType="java.lang.String">
		select i.image
		from topic_image i,topic t
		where i.topic_id=t.id
		and t.uid=#{uid}
		order by i.create_time desc,i.id desc
		limit #{limit}
	</select>
	<update id="updateTopicDataStealPriceByTopicId">
		update topic_data set
		steal_price=steal_price-#{price} where
		topic_id=#{topicId}
	</update>
	<update id="updateTopicDataHarvestPriceByTopicId">
		update topic_data set harvest_price=harvest_price-#{price} where
		id=#{topicId}
	</update>
	<update id="updateTopicPrice">
		update topic set price=price-#{price} where
		id=#{topicId}
	</update>
	<select id="getBalancePriceByTopicId" resultType="java.lang.Integer">
		select d.harvest_price-t.price as balancePrice from topic t,topic_data d
		where t.id=d.topic_id and t.id=#{topicId}
	</select>
	
	
</mapper>
