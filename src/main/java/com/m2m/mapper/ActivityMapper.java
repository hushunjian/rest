package com.m2m.mapper;

import com.m2m.domain.Activity;
import com.m2m.domain.ActivityExample;
import com.m2m.domain.ActivityWithBLOBs;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int countByExample(ActivityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int deleteByExample(ActivityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    @Delete({
        "delete from activity",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    @Insert({
        "insert into activity (id, uid, issue, ",
        "activity_title, activity_hash_title, ",
        "activity_cover, activity_notice_title, ",
        "activity_notice_cover, start_time, ",
        "end_time, person_times, ",
        "create_time, update_time, ",
        "internal_status, status, ",
        "typ, link_url, cid, ",
        "activity_content, activity_result)",
        "values (#{id,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{issue,jdbcType=VARCHAR}, ",
        "#{activityTitle,jdbcType=VARCHAR}, #{activityHashTitle,jdbcType=VARCHAR}, ",
        "#{activityCover,jdbcType=VARCHAR}, #{activityNoticeTitle,jdbcType=VARCHAR}, ",
        "#{activityNoticeCover,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, ",
        "#{endTime,jdbcType=TIMESTAMP}, #{personTimes,jdbcType=INTEGER}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, ",
        "#{internalStatus,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, ",
        "#{typ,jdbcType=INTEGER}, #{linkUrl,jdbcType=VARCHAR}, #{cid,jdbcType=BIGINT}, ",
        "#{activityContent,jdbcType=LONGVARCHAR}, #{activityResult,jdbcType=LONGVARCHAR})"
    })
    int insert(ActivityWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int insertSelective(ActivityWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    List<ActivityWithBLOBs> selectByExampleWithBLOBs(ActivityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    List<Activity> selectByExample(ActivityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    @Select({
        "select",
        "id, uid, issue, activity_title, activity_hash_title, activity_cover, activity_notice_title, ",
        "activity_notice_cover, start_time, end_time, person_times, create_time, update_time, ",
        "internal_status, status, typ, link_url, cid, activity_content, activity_result",
        "from activity",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("ResultMapWithBLOBs")
    ActivityWithBLOBs selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int updateByExampleSelective(@Param("record") ActivityWithBLOBs record, @Param("example") ActivityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int updateByExampleWithBLOBs(@Param("record") ActivityWithBLOBs record, @Param("example") ActivityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int updateByExample(@Param("record") Activity record, @Param("example") ActivityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int updateByPrimaryKeySelective(ActivityWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    @Update({
        "update activity",
        "set uid = #{uid,jdbcType=BIGINT},",
          "issue = #{issue,jdbcType=VARCHAR},",
          "activity_title = #{activityTitle,jdbcType=VARCHAR},",
          "activity_hash_title = #{activityHashTitle,jdbcType=VARCHAR},",
          "activity_cover = #{activityCover,jdbcType=VARCHAR},",
          "activity_notice_title = #{activityNoticeTitle,jdbcType=VARCHAR},",
          "activity_notice_cover = #{activityNoticeCover,jdbcType=VARCHAR},",
          "start_time = #{startTime,jdbcType=TIMESTAMP},",
          "end_time = #{endTime,jdbcType=TIMESTAMP},",
          "person_times = #{personTimes,jdbcType=INTEGER},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "internal_status = #{internalStatus,jdbcType=INTEGER},",
          "status = #{status,jdbcType=INTEGER},",
          "typ = #{typ,jdbcType=INTEGER},",
          "link_url = #{linkUrl,jdbcType=VARCHAR},",
          "cid = #{cid,jdbcType=BIGINT},",
          "activity_content = #{activityContent,jdbcType=LONGVARCHAR},",
          "activity_result = #{activityResult,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKeyWithBLOBs(ActivityWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    @Update({
        "update activity",
        "set uid = #{uid,jdbcType=BIGINT},",
          "issue = #{issue,jdbcType=VARCHAR},",
          "activity_title = #{activityTitle,jdbcType=VARCHAR},",
          "activity_hash_title = #{activityHashTitle,jdbcType=VARCHAR},",
          "activity_cover = #{activityCover,jdbcType=VARCHAR},",
          "activity_notice_title = #{activityNoticeTitle,jdbcType=VARCHAR},",
          "activity_notice_cover = #{activityNoticeCover,jdbcType=VARCHAR},",
          "start_time = #{startTime,jdbcType=TIMESTAMP},",
          "end_time = #{endTime,jdbcType=TIMESTAMP},",
          "person_times = #{personTimes,jdbcType=INTEGER},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "internal_status = #{internalStatus,jdbcType=INTEGER},",
          "status = #{status,jdbcType=INTEGER},",
          "typ = #{typ,jdbcType=INTEGER},",
          "link_url = #{linkUrl,jdbcType=VARCHAR},",
          "cid = #{cid,jdbcType=BIGINT}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Activity record);
}