package com.m2m.mapper;

import com.m2m.domain.TopicAggregation;
import com.m2m.domain.TopicAggregationExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface TopicAggregationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_aggregation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int countByExample(TopicAggregationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_aggregation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int deleteByExample(TopicAggregationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_aggregation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    @Delete({
        "delete from topic_aggregation",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_aggregation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    @Insert({
        "insert into topic_aggregation (id, topic_id, ",
        "sub_topic_id, is_top, ",
        "is_publish, create_time, ",
        "update_time)",
        "values (#{id,jdbcType=BIGINT}, #{topicId,jdbcType=BIGINT}, ",
        "#{subTopicId,jdbcType=BIGINT}, #{isTop,jdbcType=INTEGER}, ",
        "#{isPublish,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP})"
    })
    int insert(TopicAggregation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_aggregation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int insertSelective(TopicAggregation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_aggregation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    List<TopicAggregation> selectByExample(TopicAggregationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_aggregation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    @Select({
        "select",
        "id, topic_id, sub_topic_id, is_top, is_publish, create_time, update_time",
        "from topic_aggregation",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    TopicAggregation selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_aggregation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int updateByExampleSelective(@Param("record") TopicAggregation record, @Param("example") TopicAggregationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_aggregation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int updateByExample(@Param("record") TopicAggregation record, @Param("example") TopicAggregationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_aggregation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int updateByPrimaryKeySelective(TopicAggregation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table topic_aggregation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    @Update({
        "update topic_aggregation",
        "set topic_id = #{topicId,jdbcType=BIGINT},",
          "sub_topic_id = #{subTopicId,jdbcType=BIGINT},",
          "is_top = #{isTop,jdbcType=INTEGER},",
          "is_publish = #{isPublish,jdbcType=INTEGER},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(TopicAggregation record);
}