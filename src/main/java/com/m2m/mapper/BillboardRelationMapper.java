package com.m2m.mapper;

import com.m2m.domain.BillboardRelation;
import com.m2m.domain.BillboardRelationExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface BillboardRelationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table billboard_relation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int countByExample(BillboardRelationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table billboard_relation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int deleteByExample(BillboardRelationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table billboard_relation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    @Delete({
        "delete from billboard_relation",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table billboard_relation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    @Insert({
        "insert into billboard_relation (id, source_id, ",
        "target_id, type, sort)",
        "values (#{id,jdbcType=BIGINT}, #{sourceId,jdbcType=BIGINT}, ",
        "#{targetId,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER})"
    })
    int insert(BillboardRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table billboard_relation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int insertSelective(BillboardRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table billboard_relation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    List<BillboardRelation> selectByExample(BillboardRelationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table billboard_relation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    @Select({
        "select",
        "id, source_id, target_id, type, sort",
        "from billboard_relation",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    BillboardRelation selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table billboard_relation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int updateByExampleSelective(@Param("record") BillboardRelation record, @Param("example") BillboardRelationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table billboard_relation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int updateByExample(@Param("record") BillboardRelation record, @Param("example") BillboardRelationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table billboard_relation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int updateByPrimaryKeySelective(BillboardRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table billboard_relation
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    @Update({
        "update billboard_relation",
        "set source_id = #{sourceId,jdbcType=BIGINT},",
          "target_id = #{targetId,jdbcType=BIGINT},",
          "type = #{type,jdbcType=INTEGER},",
          "sort = #{sort,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(BillboardRelation record);
}