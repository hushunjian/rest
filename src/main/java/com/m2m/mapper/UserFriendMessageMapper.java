package com.m2m.mapper;

import com.m2m.domain.UserFriendMessage;
import com.m2m.domain.UserFriendMessageExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface UserFriendMessageMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_friend_message
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int countByExample(UserFriendMessageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_friend_message
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int deleteByExample(UserFriendMessageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_friend_message
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    @Delete({
        "delete from user_friend_message",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_friend_message
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    @Insert({
        "insert into user_friend_message (id, uid, content, ",
        "create_time, source_uid, ",
        "target_uid)",
        "values (#{id,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{sourceUid,jdbcType=BIGINT}, ",
        "#{targetUid,jdbcType=BIGINT})"
    })
    int insert(UserFriendMessage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_friend_message
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int insertSelective(UserFriendMessage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_friend_message
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    List<UserFriendMessage> selectByExample(UserFriendMessageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_friend_message
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    @Select({
        "select",
        "id, uid, content, create_time, source_uid, target_uid",
        "from user_friend_message",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    UserFriendMessage selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_friend_message
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int updateByExampleSelective(@Param("record") UserFriendMessage record, @Param("example") UserFriendMessageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_friend_message
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int updateByExample(@Param("record") UserFriendMessage record, @Param("example") UserFriendMessageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_friend_message
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    int updateByPrimaryKeySelective(UserFriendMessage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_friend_message
     *
     * @mbggenerated Thu Jan 11 17:51:54 CST 2018
     */
    @Update({
        "update user_friend_message",
        "set uid = #{uid,jdbcType=BIGINT},",
          "content = #{content,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "source_uid = #{sourceUid,jdbcType=BIGINT},",
          "target_uid = #{targetUid,jdbcType=BIGINT}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(UserFriendMessage record);
}